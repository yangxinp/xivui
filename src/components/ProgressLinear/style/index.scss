@use "../../../styles/tools/variables" as v;

$progress-linear-prefix-cls: v.$prefix + "-progress-linear";

.#{$progress-linear-prefix-cls} {
  position: relative;
  width: 100%;
  height: 4px;
  overflow: hidden;

  &--buffer {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: scaleX(0);
    transition: transform 0.25s ease-out;
    transform-origin: center left;
    background-color: currentColor;
    opacity: .3;
  }

  &--determinate {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: scaleX(0);
    transition: transform 0.25s ease-out;
    transform-origin: center left;
    background-color: currentColor;
  }

  &--surplus {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    background-color: currentColor;
    opacity: .3;
  }

  &--stream {
    position: absolute;
    left: 100%;
    width: 100%;
    height: 100%;
    transition: transform 0.25s ease-out;
    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-top: 4px dotted;
      border-color: currentColor;
      transform: translateX(8px);
      opacity: .3;
      animation: stream 0.2s linear infinite;
    }
  }

  &--indeterminate-long, &--indeterminate-short {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: translateX(-100%);
    &::after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      transform: translateX(-100%);
      background-color: currentColor;
    }
  }

  &--indeterminate-long {
    animation: indeterminate-long-offset 2.2s ease-in-out infinite;
    &::after {
      animation: indeterminate-long-width 2.2s cubic-bezier(.44,.14,.36,.79) infinite;
    }
  }
  &--indeterminate-short {
    animation: indeterminate-short-offset 2.2s ease-in-out infinite;
    animation-delay: 0.4s;
    &::after {
      animation: indeterminate-short-width 2.2s cubic-bezier(.65,.2,.16,.78) infinite;
      animation-delay: 0.4s;
    }
  }
}

@keyframes stream {
  to {
    transform: translateX(0px);
  }
}

@keyframes indeterminate-long-offset {
  0% {
    transform: translateX(-54%);
  }
  100% {
    transform: translateX(104%);
  }
}

@keyframes indeterminate-long-width {
  0% {
    transform: scaleX(0.08);
  }
  50% {
    transform: scaleX(0.72);
  }
  100% {
    transform: scaleX(0.08);
  }
}

@keyframes indeterminate-short-offset {
  0% {
    transform: translateX(-146%);
  }
  20% {
    transform: translateX(-146%);
  }
  100% {
    transform: translateX(54%);
  }
}

@keyframes indeterminate-short-width {
  0% {
    transform: scaleX(0.08);
  }
  50% {
    transform: scaleX(0.66);
  }
  100% {
    transform: scaleX(0.08);
  }
}

// @keyframes indeterminate-long-offset {
//   0% {
//     transform: translateX(-54.888891%);
//     animation-timing-function: cubic-bezier(0.15, 0, 0.515058, 0.409685);
//   }
//   25% {
//     transform: translateX(-17.236978%);
//     animation-timing-function: cubic-bezier(0.31033, 0.284058, 0.8, 0.733712);
//   }
//   48.35% {
//     transform: translateX(29.497274%);
//     animation-timing-function: cubic-bezier(0.4, 0.627035, 0.6, 0.902026);
//   }
//   100% {
//     transform: translateX(105.388891%);
//   }
// }

// @keyframes indeterminate-long-width {
//   0% {
//     transform: scaleX(0.08);
//     animation-timing-function: cubic-bezier(0.205028, 0.057051, 0.57661, 0.453971);
//   }
//   19.15% {
//     transform: scaleX(0.457104);
//     animation-timing-function: cubic-bezier(0.152313, 0.196432, 0.648374, 1.004315);
//   }
//   44.15% {
//     transform: scaleX(0.72796);
//     animation-timing-function: cubic-bezier(0.257759, -0.003163, 0.211762, 1.38179);
//   }
//   100% {
//     transform: scaleX(0.08);
//   }
// }

// @keyframes indeterminate-short-offset {
//   0% {
//     transform: translateX(-145.166611%);
//   }
//   20% {
//     transform: translateX(-145.166611%);
//     animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);
//   }
//   59.15% {
//     transform: translateX(-61.495191%);
//     animation-timing-function: cubic-bezier(0.302435, 0.381352, 0.55, 0.956352);
//   }
//   100% {
//     transform: translateX(55.444446%);
//   }
// }

// @keyframes indeterminate-short-width {
//   0% {
//     transform: scaleX(0.08);
//   }
//   36.65% {
//     transform: scaleX(0.08);
//     animation-timing-function: cubic-bezier(0.334731, 0.12482, 0.785844, 1);
//   }
//   69.15% {
//     transform: scaleX(0.661479);
//     animation-timing-function: cubic-bezier(0.06, 0.11, 0.6, 1);
//   }
//   100% {
//     transform: scaleX(0.08);
//   }
// }